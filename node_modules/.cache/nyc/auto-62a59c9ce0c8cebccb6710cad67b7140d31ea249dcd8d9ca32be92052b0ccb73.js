// @ts-check
'use strict';function cov_spgo402re(){var path="/root/.nvs/lib/auto.js";var hash="9c6b0aedad050df4de61b330e607d4093a5a7bc7";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/root/.nvs/lib/auto.js",statementMap:{"0":{start:{line:4,column:9},end:{line:4,column:22}},"1":{start:{line:5,column:11},end:{line:5,column:24}},"2":{start:{line:6,column:13},end:{line:6,column:28}},"3":{start:{line:8,column:17},end:{line:8,column:47}},"4":{start:{line:9,column:14},end:{line:9,column:32}},"5":{start:{line:11,column:20},end:{line:11,column:40}},"6":{start:{line:12,column:13},end:{line:12,column:29}},"7":{start:{line:13,column:19},end:{line:13,column:41}},"8":{start:{line:14,column:14},end:{line:14,column:31}},"9":{start:{line:15,column:14},end:{line:15,column:18}},"10":{start:{line:23,column:15},end:{line:23,column:19}},"11":{start:{line:24,column:11},end:{line:24,column:31}},"12":{start:{line:25,column:1},end:{line:56,column:2}},"13":{start:{line:26,column:20},end:{line:26,column:51}},"14":{start:{line:28,column:2},end:{line:32,column:3}},"15":{start:{line:29,column:3},end:{line:29,column:63}},"16":{start:{line:31,column:3},end:{line:31,column:76}},"17":{start:{line:35,column:2},end:{line:42,column:3}},"18":{start:{line:36,column:3},end:{line:36,column:42}},"19":{start:{line:37,column:3},end:{line:41,column:4}},"20":{start:{line:38,column:4},end:{line:38,column:64}},"21":{start:{line:40,column:4},end:{line:40,column:77}},"22":{start:{line:44,column:2},end:{line:52,column:3}},"23":{start:{line:45,column:3},end:{line:51,column:4}},"24":{start:{line:46,column:4},end:{line:46,column:47}},"25":{start:{line:47,column:4},end:{line:47,column:55}},"26":{start:{line:48,column:4},end:{line:48,column:10}},"27":{start:{line:50,column:4},end:{line:50,column:74}},"28":{start:{line:54,column:18},end:{line:54,column:35}},"29":{start:{line:55,column:2},end:{line:55,column:47}},"30":{start:{line:58,column:1},end:{line:74,column:2}},"31":{start:{line:59,column:24},end:{line:59,column:45}},"32":{start:{line:60,column:2},end:{line:70,column:3}},"33":{start:{line:61,column:3},end:{line:61,column:43}},"34":{start:{line:63,column:3},end:{line:65,column:4}},"35":{start:{line:64,column:4},end:{line:64,column:38}},"36":{start:{line:67,column:3},end:{line:69,column:6}},"37":{start:{line:68,column:4},end:{line:68,column:19}},"38":{start:{line:72,column:2},end:{line:72,column:41}},"39":{start:{line:73,column:2},end:{line:73,column:72}},"40":{start:{line:83,column:1},end:{line:89,column:2}},"41":{start:{line:84,column:2},end:{line:88,column:38}},"42":{start:{line:91,column:1},end:{line:93,column:4}},"43":{start:{line:92,column:2},end:{line:92,column:29}},"44":{start:{line:104,column:1},end:{line:107,column:2}},"45":{start:{line:105,column:2},end:{line:106,column:39}},"46":{start:{line:109,column:20},end:{line:109,column:71}},"47":{start:{line:111,column:1},end:{line:147,column:2}},"48":{start:{line:112,column:2},end:{line:130,column:5}},"49":{start:{line:132,column:2},end:{line:146,column:5}},"50":{start:{line:150,column:0},end:{line:154,column:2}}},fnMap:{"0":{name:"findAutoVersionAsync",decl:{start:{line:22,column:9},end:{line:22,column:29}},loc:{start:{line:22,column:35},end:{line:75,column:1}},line:22},"1":{name:"(anonymous_1)",decl:{start:{line:67,column:46},end:{line:67,column:47}},loc:{start:{line:67,column:52},end:{line:69,column:4}},line:67},"2":{name:"autoSwitchAsync",decl:{start:{line:82,column:9},end:{line:82,column:24}},loc:{start:{line:82,column:30},end:{line:94,column:1}},line:82},"3":{name:"(anonymous_3)",decl:{start:{line:91,column:39},end:{line:91,column:40}},loc:{start:{line:91,column:50},end:{line:93,column:2}},line:91},"4":{name:"enableAutoSwitch",decl:{start:{line:103,column:9},end:{line:103,column:25}},loc:{start:{line:103,column:34},end:{line:148,column:1}},line:103}},branchMap:{"0":{loc:{start:{line:24,column:11},end:{line:24,column:31}},type:"binary-expr",locations:[{start:{line:24,column:11},end:{line:24,column:14}},{start:{line:24,column:18},end:{line:24,column:31}}],line:24},"1":{loc:{start:{line:35,column:2},end:{line:42,column:3}},type:"if",locations:[{start:{line:35,column:2},end:{line:42,column:3}},{start:{line:35,column:2},end:{line:42,column:3}}],line:35},"2":{loc:{start:{line:35,column:6},end:{line:35,column:46}},type:"binary-expr",locations:[{start:{line:35,column:6},end:{line:35,column:20}},{start:{line:35,column:24},end:{line:35,column:46}}],line:35},"3":{loc:{start:{line:44,column:2},end:{line:52,column:3}},type:"if",locations:[{start:{line:44,column:2},end:{line:52,column:3}},{start:{line:44,column:2},end:{line:52,column:3}}],line:44},"4":{loc:{start:{line:47,column:19},end:{line:47,column:54}},type:"binary-expr",locations:[{start:{line:47,column:19},end:{line:47,column:31}},{start:{line:47,column:35},end:{line:47,column:54}}],line:47},"5":{loc:{start:{line:55,column:9},end:{line:55,column:45}},type:"cond-expr",locations:[{start:{line:55,column:29},end:{line:55,column:38}},{start:{line:55,column:41},end:{line:55,column:45}}],line:55},"6":{loc:{start:{line:58,column:1},end:{line:74,column:2}},type:"if",locations:[{start:{line:58,column:1},end:{line:74,column:2}},{start:{line:58,column:1},end:{line:74,column:2}}],line:58},"7":{loc:{start:{line:60,column:2},end:{line:70,column:3}},type:"if",locations:[{start:{line:60,column:2},end:{line:70,column:3}},{start:{line:60,column:2},end:{line:70,column:3}}],line:60},"8":{loc:{start:{line:63,column:3},end:{line:65,column:4}},type:"if",locations:[{start:{line:63,column:3},end:{line:65,column:4}},{start:{line:63,column:3},end:{line:65,column:4}}],line:63},"9":{loc:{start:{line:72,column:12},end:{line:72,column:40}},type:"binary-expr",locations:[{start:{line:72,column:12},end:{line:72,column:19}},{start:{line:72,column:23},end:{line:72,column:40}}],line:72},"10":{loc:{start:{line:73,column:25},end:{line:73,column:70}},type:"cond-expr",locations:[{start:{line:73,column:54},end:{line:73,column:63}},{start:{line:73,column:66},end:{line:73,column:70}}],line:73},"11":{loc:{start:{line:83,column:1},end:{line:89,column:2}},type:"if",locations:[{start:{line:83,column:1},end:{line:89,column:2}},{start:{line:83,column:1},end:{line:89,column:2}}],line:83},"12":{loc:{start:{line:104,column:1},end:{line:107,column:2}},type:"if",locations:[{start:{line:104,column:1},end:{line:107,column:2}},{start:{line:104,column:1},end:{line:107,column:2}}],line:104},"13":{loc:{start:{line:111,column:1},end:{line:147,column:2}},type:"if",locations:[{start:{line:111,column:1},end:{line:147,column:2}},{start:{line:111,column:1},end:{line:147,column:2}}],line:111}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"9c6b0aedad050df4de61b330e607d4093a5a7bc7"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_spgo402re=function(){return actualCoverage;};}return actualCoverage;}cov_spgo402re();let fs=(cov_spgo402re().s[0]++,require('fs'));// Non-const enables test mocking
const os=(cov_spgo402re().s[1]++,require('os'));const path=(cov_spgo402re().s[2]++,require('path'));const settings=(cov_spgo402re().s[3]++,require('./settings').settings);const Error=(cov_spgo402re().s[4]++,require('./error'));const NodeVersion=(cov_spgo402re().s[5]++,require('./version'));let nvsUse=(cov_spgo402re().s[6]++,require('./use'));// Non-const enables test mocking
let nvsAddRemove=(cov_spgo402re().s[7]++,require('./addRemove'));// Non-const enables test mocking
let nvsList=(cov_spgo402re().s[8]++,require('./list'));// Non-const enables test mocking
let nvsLink=(cov_spgo402re().s[9]++,null);// Lazy load
/**
 * Searches for the nearest `.node-version` or `.nvmrc` file in the current directory or parent directories.
 * If found, the version specified in the file is then added (if necessary) and returned. If no
 * `.node-version` or `.nvmrc` file is found then 'default' is returned.
 */function findAutoVersionAsync(cwd){cov_spgo402re().f[0]++;let version=(cov_spgo402re().s[10]++,null);let dir=(cov_spgo402re().s[11]++,(cov_spgo402re().b[0][0]++,cwd)||(cov_spgo402re().b[0][1]++,process.cwd()));cov_spgo402re().s[12]++;while(dir){let versionFile=(cov_spgo402re().s[13]++,path.join(dir,'.node-version'));let versionString;cov_spgo402re().s[14]++;try{cov_spgo402re().s[15]++;versionString=fs.readFileSync(versionFile,'utf8').trim();}catch(e){cov_spgo402re().s[16]++;Error.throwIfNot(Error.ENOENT,e,'Failed to read file: '+versionFile);}// If we don't have a version string, try checking for an .nvmrc file
cov_spgo402re().s[17]++;if((cov_spgo402re().b[2][0]++,!versionString)&&(cov_spgo402re().b[2][1]++,!settings.disableNvmrc)){cov_spgo402re().b[1][0]++;cov_spgo402re().s[18]++;versionFile=path.join(dir,'.nvmrc');cov_spgo402re().s[19]++;try{cov_spgo402re().s[20]++;versionString=fs.readFileSync(versionFile,'utf8').trim();}catch(e){cov_spgo402re().s[21]++;Error.throwIfNot(Error.ENOENT,e,'Failed to read file: '+versionFile);}}else{cov_spgo402re().b[1][1]++;}cov_spgo402re().s[22]++;if(versionString){cov_spgo402re().b[3][0]++;cov_spgo402re().s[23]++;try{cov_spgo402re().s[24]++;version=NodeVersion.parse(versionString);cov_spgo402re().s[25]++;version.arch=(cov_spgo402re().b[4][0]++,version.arch)||(cov_spgo402re().b[4][1]++,version.defaultArch);cov_spgo402re().s[26]++;break;}catch(e){cov_spgo402re().s[27]++;throw new Error('Failed to parse version in file: '+versionFile,e);}}else{cov_spgo402re().b[3][1]++;}let parentDir=(cov_spgo402re().s[28]++,path.dirname(dir));cov_spgo402re().s[29]++;dir=parentDir!==dir?(cov_spgo402re().b[5][0]++,parentDir):(cov_spgo402re().b[5][1]++,null);}cov_spgo402re().s[30]++;if(version){cov_spgo402re().b[6][0]++;let resolvedVersion=(cov_spgo402re().s[31]++,nvsList.find(version));cov_spgo402re().s[32]++;if(resolvedVersion){cov_spgo402re().b[7][0]++;cov_spgo402re().s[33]++;return Promise.resolve(resolvedVersion);}else{cov_spgo402re().b[7][1]++;cov_spgo402re().s[34]++;if(!settings.quiet){cov_spgo402re().b[8][0]++;cov_spgo402re().s[35]++;console.log('Adding: '+version);}else{cov_spgo402re().b[8][1]++;}cov_spgo402re().s[36]++;return nvsAddRemove.addAsync(version).then(()=>{cov_spgo402re().f[1]++;cov_spgo402re().s[37]++;return version;});}}else{cov_spgo402re().b[6][1]++;cov_spgo402re().s[38]++;nvsLink=(cov_spgo402re().b[9][0]++,nvsLink)||(cov_spgo402re().b[9][1]++,require('./link'));cov_spgo402re().s[39]++;return Promise.resolve(nvsLink.getLinkedVersion()?(cov_spgo402re().b[10][0]++,'default'):(cov_spgo402re().b[10][1]++,null));}}/**
 * Searches for the nearest `.node-version` or `.nvmrc` file in the current directory or parent directories.
 * If found, the version specified in the file is then added (if necessary) and used. If no
 * `.node-version` or `.nvmrc` file is found, then the default (linked) version, if any, is used.
 */function autoSwitchAsync(cwd){cov_spgo402re().f[2]++;cov_spgo402re().s[40]++;if(process.env['NVS_EXECUTE']){cov_spgo402re().b[11][0]++;cov_spgo402re().s[41]++;throw new Error('The \'auto\' command is not available when '+'invoking this script as an'+os.EOL+'executable. To enable PATH updates, source '+'nvs.sh from your shell instead.');}else{cov_spgo402re().b[11][1]++;}cov_spgo402re().s[42]++;return findAutoVersionAsync(cwd).then(version=>{cov_spgo402re().f[3]++;cov_spgo402re().s[43]++;return nvsUse.use(version);});}/**
 * Enables or disables automatic version switching based on the presence of a
 * .node-version file in the current shell directory or a parent directory.
 * (This functionality requires support from the bootstrap shell script.)
 *
 * @param {any} enable
 */function enableAutoSwitch(enable){cov_spgo402re().f[4]++;cov_spgo402re().s[44]++;if(/\.cmd/i.test(process.env['NVS_POSTSCRIPT'])){cov_spgo402re().b[12][0]++;cov_spgo402re().s[45]++;throw new Error('Automatic switching is not supported from a Windows Command Prompt.'+os.EOL+'Use PowerShell instead.');}else{cov_spgo402re().b[12][1]++;}let psScriptFile=(cov_spgo402re().s[46]++,path.join(path.resolve(__dirname,'..'),'nvs.ps1'));cov_spgo402re().s[47]++;if(enable){cov_spgo402re().b[13][0]++;cov_spgo402re().s[48]++;require('./postScript').generate(null,{'.PS1':[// Patch the function that is invoked every time PowerShell shows a prompt.
// Export the function from the script using a dynamic module; this
// does NOT require the script to be sourced.
'if (-not $env:NVS_ORIGINAL_PROMPT) { ','   $env:NVS_ORIGINAL_PROMPT = $(Get-Content function:\\prompt)','}','New-Module -Script {','   function prompt { . "'+psScriptFile+'" "prompt" }','   Export-ModuleMember -Function prompt','} > $null'],'.SH':['function cd () { builtin cd "$@" && nvs cd; }','function pushd () { builtin pushd "$@" && nvs cd; }','function popd () { builtin popd "$@" && nvs cd; }']});}else{cov_spgo402re().b[13][1]++;cov_spgo402re().s[49]++;require('./postScript').generate(null,{'.PS1':['if ($env:NVS_ORIGINAL_PROMPT) { ','   New-Module -Script {','      function prompt { Invoke-Expression $env:NVS_ORIGINAL_PROMPT }','      Export-ModuleMember -Function prompt','   } > $null','}'],'.SH':['function cd () { builtin cd "$@"; }','function pushd () { builtin pushd "$@"; }','function popd () { builtin popd "$@"; }']});}}cov_spgo402re().s[50]++;module.exports={findAutoVersionAsync,autoSwitchAsync,enableAutoSwitch};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,